{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# BEGIN TO CODE WITH PYTHON Published with the authorization of Microsoft Corporation by: Pearson Education, Inc. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The book from where i practice"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Perform operations using data types and operators (20-25%) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To prepare for this topic, you should pay special attention to Chapter 4, which describes the essentials of data processing in Python programs as well as how text and numeric data is stored and manipulated. Chapter 5 introduces the Boolean variable type and explains how logical values are manipulated. Chapter 8 describes how to store collections of data, and Chapter 9 explains the creation and storage of data structures. Chapter 11 gives details of sets in Python programs"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Control flow with decisions and loops (25-30%)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " To prepare for this topic, you should pay special attention to Chapter 5, which describes the if construction, and Chapter 6, which moves on to describe the while and for loop constructions that are used to implement looping in Python programs. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Perform input and output operations (20-25%) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " The use of console input and output functions is demonstrated throughout the book, starting with the very first programs described in Chapters 3 and 4. Chapter 8 introduces the use of file storage in Python programs, and Chapter 9 expands on this to show how data structures can be saved into files by the use of the Python pickle library. Chapter 10 contains details of the string formatting facilities available to Python programs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Document and structure code (15-20%)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The importance of well-structured and documented code is highlighted throughout the text. Chapter 3 introduces Python comments, and Chapter 5 contains a discussion highlighting the importance of good code layout. Chapter 7 introduces Python functions in the context of improving program structure and describes how to add documentation to functions to make programs self-documenting."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Perform troubleshooting and error handling (5-10%) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " Chapter 3 contains coverage of syntax errors in Python code. In Chapter 4, the description of data processing includes descriptions of runtime errors. In Chapters 6 and 7, the causes and effects of logic errors are discussed in the context of an application development. Chapters 6 and 10 contain descriptions of how Python programs can raise and manage exceptions, and Chapter 12 contains a description of the use of unit tests in Python program testing. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Perform operations using modules and tools (1-5%)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " Many Python modules are used throughout the text, starting with the random and time modules. The functions from the random library are used in Chapter 13 to create random artwork, and functions from the time library are used in a time-tracking application used in Chapter 16."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
